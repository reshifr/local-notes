#!/bin/bash

EXIT_SUCCESS=0
EXIT_FAILURE=1
HELP_REGEX='(^\-h$|^\-\-(h$|he$|hel$|help$))'

DIR=.
PERMS=+rw
PUBLIC_DIR="/tmp"
PRIVATE_DIR="$DIR/.log"
FILE_ID="$(dbus-uuidgen)$(dbus-uuidgen)"
FILE_ENCRYPT="$PUBLIC_DIR/encrypt-$FILE_ID"
FILE_DECRYPT="$PRIVATE_DIR/decrypt-$FILE_ID"
MAGIC_NUMBER=174487
HELP="\
Penggunaan: secret COMMAND
Alat enkripsi-deskripsi dengan AES 256-bit CBC.

Commands:
  -e   enkripsi pesan.
  -d   deskripsi pesan.

Email: <reshifr@gmail.com>
Github: <https://github.com/reshifr>"

success_message() { # ( msg... )
  for arg in "$@"; do
    printf "$arg\n"
  done
  exit "$EXIT_SUCCESS"
}

failure_message() { # ( msg... )
  for arg in "$@"; do
    printf "$arg\n" >&2
  done
  exit "$EXIT_FAILURE"
}

log_failed() {
  failure_message \
    'Kesalahan akses' \
    'Program tidak memiliki akses untuk mengakses log data.'
}

log_handle() {
  # buat PUBLIC_DIR
  if [ ! -d "$PUBLIC_DIR" ]; then
    mkdir -m "$PERMS" -p "$PUBLIC_DIR" &> /dev/null || log_failed
  fi
  # buat PRIVATE_DIR
  if [ ! -d "$PRIVATE_DIR" ]; then
    mkdir -m "$PERMS" -p "$PRIVATE_DIR" &> /dev/null || log_failed
  fi
}

clean() {
  # bersihkan PUBLIC_DIR
  find "$PUBLIC_DIR" 2> /dev/null |
  grep -E 'encrypt-[0-9a-f]{64}$' | parallel rm -rf '{}' &> /dev/null
  # bersihkan PRIVATE_DIR
  find "$PRIVATE_DIR" 2> /dev/null |
  grep -E 'decrypt-[0-9a-f]{64}$' | shred -fuz '{}' &> /dev/null
}

encrypt() {
  openssl aes-256-cbc -a -e -pbkdf2 -iter "$MAGIC_NUMBER" \
    -in "$FILE_DECRYPT" -out "$FILE_ENCRYPT" 2> /dev/null
}

decrypt() {
  openssl aes-256-cbc -a -d -pbkdf2 -iter "$MAGIC_NUMBER" \
    -in "$FILE_ENCRYPT" -out "$FILE_DECRYPT" 2> /dev/null
}

log_handle
grep -Eo "$HELP_REGEX" <<< "$1" &> /dev/null && success_message "$HELP"
case "$1" in
  -e)
    nano "$FILE_DECRYPT"
    [ ! -f "$FILE_DECRYPT" ] && exit "$EXIT_SUCCESS"
    encrypt
    if [ -f "$FILE_ENCRYPT" ]; then
      clear
      printf '\033[1;34mENCRYPTED\n\033[0m'
      cat "$FILE_ENCRYPT"
    fi
    clean
  ;;
  -d)
    nano "$FILE_ENCRYPT"
    decrypt
    if [ -f "$FILE_DECRYPT" ]; then
      clear
      printf '\033[1;31mDECRYPTED\n\033[0m'
      cat "$FILE_DECRYPT"
    fi
    clean
  ;;
  *)
    failure_message "$HELP"
  ;;
esac
